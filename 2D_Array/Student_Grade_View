#Joshua Hooder
#Started 10-02-2023
#Simple Program to Enter and Check Student Grades
#[11-02-2023] Simple my ass, its 1:40 am and im trying to make student name and grade inputs work
#Listen Time: 07:033:04

import os, re, pickle
os.system("cls")


with open("2d_Array\student_list.bin", "rb") as data:
    student_list = pickle.load(data)


print("Welcome")

def sub_choice(option1, option1_result, option2, option2_result):
    print(f"What Would You Like to do?\n1: {option1}\n2: {option2}\n3: Return to the Menu")
    while True:
        try:
            choice = int(input())
        except:
            print("Enter a Vaild Option:")
            continue
        if choice == 1:
            os.system("cls")
            option1_result()
            break
        elif choice == 2:
            os.system("cls")
            option2_result()
            break
        elif choice == 3:
            os.system("cls")
            choice_input()
            break
        else:
            print("Enter a Vaild Option:")
def no_students():
    print("You Have No Students...\n1: Add a Student\n2:Return to the Menu")
    while True:
        try:
            choice = int(input())
        except:
            print("Enter a Vaild Option:")
            continue
        if choice == 1:
            os.system("cls")
            try_add_student()
            break
        elif choice == 2:
            os.system("cls")
            choice_input()
            break
        else:
            print("Enter a Vaild Option:")
def student_not_found(function):
    os.system("cls")
    print("That Student Cannot be Found\nWould You Like to Try Again?[y/n]")
    while True: 
        choice = input().lower()
        if choice == "y":
            os.system("cls")
            function()
            break
        elif choice == "n":
            os.system("cls")
            sub_choice("Add a Student", try_add_student, "List Students", list_students)
            break
        else: 
            print("Enter 'y' or 'n'")
def student_input_check(student):
    while len(student) == 0 or student.isspace():
        print("Do Not Leave the Input Blank\nEnter the Student's Name:")
        student = input().lower()
    student = re.sub(' +', ' ', student)
    while student[-1] == " ":
            student = student[:-1]
    while student[0] == " ":
            student = student[1:]
    student = student.replace(" ", "_")
    return student
def student_average():
    if len(student_list) != 0:
        print("Which Student's Average do You Want to See:")
        student = input().lower()
        student = student_input_check(student)
        if not student.replace("_", "").isalpha():
            student_not_found(student_average)
        for i, sublist in enumerate(student_list):
            if student in sublist:
                if len(student_list[i]) != 1:
                    sum = 0
                    count = 0
                    for j in student_list[i]:
                        if isinstance(j, float):
                            sum += j
                            count += 1
                    print(f"Student's Average is:\n{'{0:.2f}'.format(sum/count)}")
                    input("Press Enter to Continue") 
                    os.system("cls")
                    sub_choice("Try Again", student_average, "Add a Grade", add_grade)
                else:
                    print("That Student Has no Grades\n1: Add a Grade\n2: Return to the Menue")
                    while True:
                        try:
                            choice = int(input())
                        except:
                            print("Enter a Vaild Option")
                        if choice == 1:
                            os.system("cls")
                            add_grade() 
                            break
                        elif choice == 2:
                            os.system("cls")
                            choice_input()
                            break
                        else:
                            print("Enter a Vaild Option")                
        else:
            student_not_found(student_average)
        no_students()
def class_average():
    if len(student_list) != 0:
        for i in student_list:
            if len(i) > 1:
                sum = 0
                count = 0
                for i in student_list:
                    for j in i:
                        if isinstance(j, float):
                            sum += j
                            count += 1    
                avg = '{0:.2}'.format(sum/count)
                print(f"Classes Average is:\n\n{avg}")
                input("\nPress Enter to Continue")
                os.system("cls")
                sub_choice("Add Another Student", try_add_student, "Add another Grade", add_grade)
        else:
            print("No Grades Available")
            sub_choice("Add a Grade", add_grade, "Add Another Student", try_add_student)
    else:
        no_students()
def list_students():
    if len(student_list) != 0:
        print("These are the Students:\n")
        for i in student_list:
            print(i[0].replace("_", " "))
        input("\nPress Enter to Continue")
        os.system("cls")
        sub_choice("View Student's Grades", list_grades, "Add Student", try_add_student)
    else:
        no_students
def list_grades():
    if len(student_list) != 0:
        print("Which Student's Grades do You Want to See:")
        student = student_input_check(input().lower())
        if not student.replace("_", "").isalpha():
            student_not_found(list_grades)
        for i, sublist in enumerate(student_list):
            if student in sublist:   
                if len(student_list[i]) != 0:
                    os.system("cls")
                    print("Student's Grades:\n")
                    for i in student_list[i][1:]:
                        print(i)
                    input("\nPress Any Key to Continue")
                    os.system("cls")
                    sub_choice("Add Another Grade", add_grade, "Add a Student", try_add_student)
                    break
                else:
                    os.system("cls")
                    print("Student has No Grades")
                    sub_choice("Add a Grade", add_grade, "Add a Student", try_add_student)
                    break
        else:
            student_not_found(list_grades)
    else:
        no_students()
def add_student(name):
    global student_list
    student_list.append([name])
    with open("2d_Array\student_list.bin", "wb") as output:
        pickle.dump(student_list, output)
    os.system("cls")
    print(f"Student, {name.replace('_', ' ')},Added to the List")
    sub_choice("Add Another Student", try_add_student, "Add a Grade to a Student", add_grade)
def try_add_student():
    for sublist in student_list:
        list_check = str(sublist)
    print("Please Enter Student's Name:")
    while True:
        student_name = input().lower()
        student_name = student_input_check(student_name)
        if student_name.replace(" ", "_") in student_list:
            os.system("cls")
            print("That Student Already Exists")
            sub_choice("Try Again", try_add_student, "List Students", add_grade)
            break
        if student_name.isalpha():
            print("You Are Not Entering a Last Name\n Are You Sure You Want to Continue?[y/n]")
            while True: 
                choice = input().lower()
                if choice == "y":
                    add_student(student_name)
                elif choice == "n":
                    sub_choice("Try Again", try_add_student, "List Students", add_grade)
                    break
                else: 
                    print("Enter 'y' or 'n'")
            break
        else:
            student_name = student_name.replace(" ", "_")
            if not student_name.replace("_", "").isalpha():
                os.system("cls")
                print("Student's Name Should Only Contain Letters and Spaces\nEnter Student's Name:")
                continue
            else:
                add_student(student_name)
def add_grade():
    global student_list
    if len(student_list) != 0:
        check_list = [sublist[0] for sublist in student_list]
        print("Which Student Woud you Like to Grade:")
        choice = student_input_check(input().lower())
        if choice in check_list and choice.replace("_", "").isalpha(): #isalpha makes sure that it doesnt pick up a grade
            for i, sublist in enumerate(student_list):
                if choice in sublist:
                    index = i
                    break
            print("What Grade Would You Like to Add (0-100):")
            try_count = 0
            while True:
                try_count += 1
                if try_count == 10:
                    os.system("cls")
                    print("You Have Tried to Add a Grade 10 Times, Go Think About Your Actions")
                    choice_input()
                    break
                grade = input()
                if grade.replace(".", "").isdigit() and 0 <= float(grade) <= 100:
                    grade = '{0:.2f}'.format(float(grade))
                    student_list[index].append(grade)
                    with open("2d_Array\student_list.bin", "wb") as output:
                        pickle.dump(student_list, output)
                    os.system("cls")
                    print(f"Grade of {grade} Added {choice.replace('_', ' ')}'s Profile")
                    sub_choice("Add Another Grade", add_grade, "List Student's Grades", list_grades)
                    break
                else:
                    print("Enter a Grade From 0-100")
        else:
            student_not_found(add_grade)
    else: 
        no_students()
def remove_grade():
    print()
def choice_input():
    while True:
        print(f"Please Chose one of the Following\n1: Add to a Student or Grade\n2: List off Students or Grades\n3: Find the Student's Average\n4: Find the Class Average\n5: Exit")
        try:
            choice = int(input())
        except:
            print("Enter a Vaild Option:")
            continue
        if choice == 1:
            os.system("cls")
            sub_choice("Add a Student", try_add_student, "Add a Grade to a Student", add_grade)
            break
        elif choice == 2:
            os.system("cls")
            sub_choice("List Students", list_students, "List Student's Grades", list_grades)
            break
        elif choice == 3:
            os.system("cls")
            student_average()
            break
        elif choice == 4:
            os.system("cls")
            class_average()
            break
        elif choice == 5:
            os.system("cls")
            exit("Program Closed")
        else:
            print("Please Enter a Vaild Option:")
choice_input()
