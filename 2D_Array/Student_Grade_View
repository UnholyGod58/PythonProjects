#Joshua Hooder
#Started 10-02-2023
#Simple Program to Enter and Check Student Grades
#[11-02-2023] Simple my ass, its 1:40 am and im trying to make student name and grade inputs work
#finished 13-02-2023
#Listen Time: 09:030:08

import os, re, pickle
os.system("cls")

with open("2d_Array\student_list.bin", "rb") as data:
    student_list = pickle.load(data)


def sub_choice(option1, option1_result, option2, option2_result):
    print(f"What Would You Like to do?\n1: {option1}\n2: {option2}\n3: Return to the Menu")
    while True:
        try:
            choice = int(input())
        except:
            print("Enter a Vaild Option:")
            continue
        if choice == 1:
            os.system("cls")
            option1_result()
            break
        elif choice == 2:
            os.system("cls")
            option2_result()
            break
        elif choice == 3:
            os.system("cls")
            choice_input()
            break
        else:
            print("Enter a Vaild Option:")
def no_students():
    print("You Have No Students...\n1: Add a Student\n2:Return to the Menu")
    while True:
        try:
            choice = int(input())
        except:
            print("Enter a Vaild Option:")
            continue
        if choice == 1:
            os.system("cls")
            try_add_student()
            break
        elif choice == 2:
            os.system("cls")
            choice_input()
            break
        else:
            print("Enter a Vaild Option:")
def student_not_found(function):
    os.system("cls")
    print("That Student Cannot be Found\nWould You Like to Try Again?[y/n]")
    while True: 
        choice = input().lower()
        if choice == "y":
            os.system("cls")
            function()
            break
        elif choice == "n":
            os.system("cls")
            sub_choice("Add a Student", try_add_student, "List Students", list_students)
            break
        else: 
            print("Enter 'y' or 'n'")
def student_input_check(student):
    while len(student) == 0 or student.isspace():
        print("Do Not Leave the Input Blank\nEnter the Student's Name:")
        student = input().lower()
    student = re.sub(' +', ' ', student)
    while student[-1] == " ":
            student = student[:-1]
    while student[0] == " ":
            student = student[1:]
    return student
def student_average():
    if len(student_list) >= 1:
        print("Which Student's Average do You Want to See:")
        student = input().lower()
        student = student_input_check(student)
        if not student.replace(" ", "").isalpha():
            student_not_found(student_average)
        for i, sublist in enumerate(student_list):
            if student in sublist:
                if len(student_list[i]) != 1:
                    sum = 0
                    count = 0
                    for j in student_list[i]:
                        if isinstance(j, float):
                            sum += j
                            count += 1
                    print(f"Student's Average is:\n{'{0:.2f}'.format(sum/count)}")
                    input("Press Enter to Continue") 
                    os.system("cls")
                    sub_choice("Try Again", student_average, "Add a Grade", add_grade)
                else:
                    print("That Student Has no Grades\n1: Add a Grade\n2: Return to the Menue")
                    while True:
                        try:
                            choice = int(input())
                        except:
                            print("Enter a Vaild Option")
                        if choice == 1:
                            os.system("cls")
                            add_grade() 
                            break
                        elif choice == 2:
                            os.system("cls")
                            choice_input()
                            break
                        else:
                            print("Enter a Vaild Option")                
        else:
            student_not_found(student_average)
    else:
        no_students()
def class_average():
    if len(student_list) >= 1:
        for i in student_list:
            if len(i) > 1:
                sum = 0
                count = 0
                for i in student_list:
                    for j in i:
                        if isinstance(j, float):
                            sum += j
                            count += 1    
                avg = '{0:.2}'.format(sum/count)
                print(f"Classes Average is:\n\n{avg}")
                input("\nPress Enter to Continue")
                os.system("cls")
                sub_choice("Add Another Student", try_add_student, "Add another Grade", add_grade)
        else:
            print("No Grades Available")
            sub_choice("Add a Grade", add_grade, "Add Another Student", try_add_student)
    else:
        no_students()
def list_students():
    if len(student_list) >= 1:
        print("These are the Students:\n")
        for i in student_list:
            print(i[0])
        input("\nPress Enter to Continue")
        os.system("cls")
        sub_choice("View Student's Grades", list_grades, "Add Student", try_add_student)
    else:
        no_students()
def list_grades():
    if len(student_list) >= 1:
        print("Which Student's Grades do You Want to See:")
        student = student_input_check(input().lower())
        if not student.replace(" ", "").isalpha():
            student_not_found(list_grades)
        for i, sublist in enumerate(student_list):
            if student in sublist:   
                if len(student_list[i]) != 1:
                    os.system("cls")
                    print("Student's Grades:\n")
                    for i in student_list[i][1:]:
                        print(i)
                    input("\nPress Any Key to Continue")
                    os.system("cls")
                    sub_choice("Add Another Grade", add_grade, "Add a Student", try_add_student)
                    break
                else:
                    os.system("cls")
                    print("Student has No Grades")
                    sub_choice("Add a Grade", add_grade, "Add a Student", try_add_student)
                    break
        else:
            student_not_found(list_grades)
    else:
        no_students()
def add_student(name):
    global student_list
    student_list.append([name])
    with open("2d_Array\student_list.bin", "wb") as output:
        pickle.dump(student_list, output)
    os.system("cls")
    print(f"Student, {name},Added to the List")
    sub_choice("Add Another Student", try_add_student, "Add a Grade to a Student", add_grade)
def try_add_student():
    print("Please Enter Student's Name:")
    for i in student_list:
        student_name = input().lower()
        student_name = student_input_check(student_name)
        if not student_name in i:
            if student_name.isalpha():
                print("You Are Not Entering a Last Name\n Are You Sure You Want to Continue?[y/n]")
                while True: 
                    choice = input().lower()
                    if choice == "y":
                        add_student(student_name)
                        break
                    elif choice == "n":
                        sub_choice("Try Again", try_add_student, "List Students", add_grade)
                        break
                    else: 
                        print("Enter 'y' or 'n'")
                break
            else:
                if not student_name.replace(" ", "").isalpha():
                    os.system("cls")
                    print("Student's Name Should Only Contain Letters and Spaces\nEnter Student's Name:")
                    continue
                else:
                    add_student(student_name)
                    break
    else:
        print("That Student Already Exists")
        sub_choice("Try Again", try_add_student, "List Student", list_students)
def add_grade():
    global student_list
    if len(student_list) >= 1:
        print("Which Student Woud you Like to Grade:")
        for i, sublist in enumerate(student_list):
            student = student_input_check(input().lower())
            if student in sublist and student.replace(" ", "").isalpha(): #isalpha makes sure that it doesnt pick up a grade
                print("What Grade Would You Like to Add (0-100):")
                try_count = 0
                while True:
                    try_count += 1
                    if try_count == 10:
                        os.system("cls")
                        print("You Have Tried to Add a Grade 10 Times, Go Think About Your Actions")
                        choice_input()
                        break
                    grade = input()
                    if grade.replace(".", "").isdigit() and 0 <= float(grade) <= 100:
                        grade = '{0:.2f}'.format(float(grade))
                        student_list[i].append(grade)
                        with open("2d_Array\student_list.bin", "wb") as output:
                            pickle.dump(student_list, output)
                        os.system("cls")
                        print(f"Grade of {grade} Added {student}'s Profile")
                        sub_choice("Add Another Grade", add_grade, "List Student's Grades", list_grades)
                        break
                    else:
                        print("Enter a Grade From 0-100")
        else:
            student_not_found(add_grade)
    else: 
        no_students()
def remove_grade():
    if len(student_list) >= 1:
        print("What Student Would You Like to Remove a Grade From:")
        student = input().lower()
        for i, sublist in enumerate(student_list[2:]):
                if student in sublist:
                    if len(student_list[i]) == 1:
                        print("Student Has No Grades")
                        sub_choice("Add a Grade", add_grade, "Remove Student", remove_student)
                        break
                    else:
                        print("What Grade Would You Like to Remove")
                        grade = input()
                        if grade.replace(".", "").isdigit() and 0 <= float(grade) <= 100:
                            grade = '{0:.2f}'.format(float(grade))
                            if grade in student_list[i]:
                                student_list[i].remove(grade)
                                with open("2d_Array\student_list.bin", "wb") as output:
                                    pickle.dump(student_list, output)
                                os.system("cls")
                                print(f"Grade of {grade} Removed From {student}'s Profile")
                                sub_choice("Remove Another Grade", remove_grade, "List Student's Grades", list_grades)
                                break
                            else:
                                os.system("cls")
                                print("That Grade is not on Student's Profile")
                                sub_choice("Try Again", remove_grade, "List Student's Grades", list_grades)
                        else:
                            print("Enter a Grade From 0-100")
                            continue
        else:
            student_not_found(remove_grade)
    else:
        no_students()
def remove_student():
    if len(student_list) >= 1:
        print("What Student Would You Like to Remove:")
        student = input().lower()
        student_input_check(student)
        for i, sublist in enumerate(student_list):
            if student in sublist:
                del student_list[i]
                with open("2d_Array\student_list.bin", "wb") as output:
                    pickle.dump(student_list, output)
                os.system("cls")
                print(f"{student} Removed From Class")
                sub_choice("Remove Another Student", remove_student, "List Students", list_students)
                break
        else:
            student_not_found(remove_student)
    else:
        no_students()
def choice_input():
    while True:
        print(f"Please Chose one of the Following\n1: Add to a Student or Grade\n2: List off Students or Grades\n3: Find Class or Student's Average\n4: Remove Student or Grade\n5: Exit")
        try:
            choice = int(input())
        except:
            print("Enter a Vaild Option:")
            continue
        if choice == 1:
            os.system("cls")
            sub_choice("Add a Student", try_add_student, "Add a Grade to a Student", add_grade)
            break
        elif choice == 2:
            os.system("cls")
            sub_choice("List Students", list_students, "List Student's Grades", list_grades)
            break
        elif choice == 3:
            os.system("cls")
            sub_choice("Find a Student's Average", student_average, "Find Class Average", class_average)
            break
        elif choice == 4:
            os.system("cls")
            sub_choice("Remove Student", remove_student, "Remove Grade From a Student", remove_grade)
            break
        elif choice == 5:
            os.system("cls")
            exit("Program Closed")
        else:
            print("Please Enter a Vaild Option:")
choice_input()
